<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alankin.ucenter.dao.mapper.ChannelRecordMapper">
    <resultMap id="BaseResultMap" type="com.alankin.ucenter.dao.model.ChannelRecord">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="channel_id" property="channelId" jdbcType="BIGINT"/>
        <result column="sys_user_id" property="sysUserId" jdbcType="BIGINT"/>
        <result column="register_count" property="registerCount" jdbcType="INTEGER"/>
        <result column="in_count" property="inCount" jdbcType="INTEGER"/>
        <result column="verify_count" property="verifyCount" jdbcType="INTEGER"/>
        <result column="provide_count" property="provideCount" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, channel_id, sys_user_id, register_count, in_count, verify_count, provide_count, 
    create_time, update_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.alankin.ucenter.dao.model.ChannelRecordExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from channel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from channel_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from channel_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.alankin.ucenter.dao.model.ChannelRecordExample">
        delete from channel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.alankin.ucenter.dao.model.ChannelRecord">
    insert into channel_record (id, channel_id, sys_user_id, 
      register_count, in_count, verify_count, 
      provide_count, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{channelId,jdbcType=BIGINT}, #{sysUserId,jdbcType=BIGINT}, 
      #{registerCount,jdbcType=INTEGER}, #{inCount,jdbcType=INTEGER}, #{verifyCount,jdbcType=INTEGER}, 
      #{provideCount,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.alankin.ucenter.dao.model.ChannelRecord">
        insert into channel_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="channelId != null">
                channel_id,
            </if>
            <if test="sysUserId != null">
                sys_user_id,
            </if>
            <if test="registerCount != null">
                register_count,
            </if>
            <if test="inCount != null">
                in_count,
            </if>
            <if test="verifyCount != null">
                verify_count,
            </if>
            <if test="provideCount != null">
                provide_count,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="channelId != null">
                #{channelId,jdbcType=BIGINT},
            </if>
            <if test="sysUserId != null">
                #{sysUserId,jdbcType=BIGINT},
            </if>
            <if test="registerCount != null">
                #{registerCount,jdbcType=INTEGER},
            </if>
            <if test="inCount != null">
                #{inCount,jdbcType=INTEGER},
            </if>
            <if test="verifyCount != null">
                #{verifyCount,jdbcType=INTEGER},
            </if>
            <if test="provideCount != null">
                #{provideCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.alankin.ucenter.dao.model.ChannelRecordExample"
            resultType="java.lang.Integer">
        select count(*) from channel_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update channel_record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.channelId != null">
                channel_id = #{record.channelId,jdbcType=BIGINT},
            </if>
            <if test="record.sysUserId != null">
                sys_user_id = #{record.sysUserId,jdbcType=BIGINT},
            </if>
            <if test="record.registerCount != null">
                register_count = #{record.registerCount,jdbcType=INTEGER},
            </if>
            <if test="record.inCount != null">
                in_count = #{record.inCount,jdbcType=INTEGER},
            </if>
            <if test="record.verifyCount != null">
                verify_count = #{record.verifyCount,jdbcType=INTEGER},
            </if>
            <if test="record.provideCount != null">
                provide_count = #{record.provideCount,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update channel_record
        set id = #{record.id,jdbcType=BIGINT},
        channel_id = #{record.channelId,jdbcType=BIGINT},
        sys_user_id = #{record.sysUserId,jdbcType=BIGINT},
        register_count = #{record.registerCount,jdbcType=INTEGER},
        in_count = #{record.inCount,jdbcType=INTEGER},
        verify_count = #{record.verifyCount,jdbcType=INTEGER},
        provide_count = #{record.provideCount,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.alankin.ucenter.dao.model.ChannelRecord">
        update channel_record
        <set>
            <if test="channelId != null">
                channel_id = #{channelId,jdbcType=BIGINT},
            </if>
            <if test="sysUserId != null">
                sys_user_id = #{sysUserId,jdbcType=BIGINT},
            </if>
            <if test="registerCount != null">
                register_count = #{registerCount,jdbcType=INTEGER},
            </if>
            <if test="inCount != null">
                in_count = #{inCount,jdbcType=INTEGER},
            </if>
            <if test="verifyCount != null">
                verify_count = #{verifyCount,jdbcType=INTEGER},
            </if>
            <if test="provideCount != null">
                provide_count = #{provideCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.alankin.ucenter.dao.model.ChannelRecord">
    update channel_record
    set channel_id = #{channelId,jdbcType=BIGINT},
      sys_user_id = #{sysUserId,jdbcType=BIGINT},
      register_count = #{registerCount,jdbcType=INTEGER},
      in_count = #{inCount,jdbcType=INTEGER},
      verify_count = #{verifyCount,jdbcType=INTEGER},
      provide_count = #{provideCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="channelRecordList" resultType="java.util.Map">
        select cr.*,
        sub.real_name,
        sub.user_name,
        c.channel_name,
        cr.verify_count / cr.in_count as verify_rate,
        cr.provide_count / cr.verify_count as provide_rate
        from channel_record cr
        left join sys_user_base sub on sub.uid = cr.sys_user_id
        left join channel c on c.id = cr.channel_id
        <where>
            1=1
            <if test="condition.uid!=null and condition.uid!=''">AND where cr.sys_user_id = #{condition.uid}</if>
            <if test="condition.recordDateEndTime!=null and condition.recordDateEndTime!=''">AND cr.create_time &lt;=
                #{condition.recordDateEndTime}
            </if>
            <if test="condition.recordDateStartTime!=null and condition.recordDateStartTime!=''">AND cr.create_time &gt;=
                #{condition.recordDateStartTime}
            </if>
        </where>
        <if test="orderField != null and orderField!=''">
            order by cr.create_time ${orderField}
        </if>


    </select>
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
</mapper>