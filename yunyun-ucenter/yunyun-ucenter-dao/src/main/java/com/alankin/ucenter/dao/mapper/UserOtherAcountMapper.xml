<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alankin.ucenter.dao.mapper.UserOtherAcountMapper">
    <resultMap id="BaseResultMap" type="com.alankin.ucenter.dao.model.UserOtherAcount">
        <id column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="user_uid" property="userUid" jdbcType="BIGINT"/>
        <result column="acount" property="acount" jdbcType="VARCHAR"/>
        <result column="acount_password" property="acountPassword" jdbcType="VARCHAR"/>
        <result column="acount_type_key" property="acountTypeKey" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    uid, user_uid, acount, acount_password, acount_type_key, create_time, update_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.alankin.ucenter.dao.model.UserOtherAcountExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_other_acount
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_other_acount
        where uid = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_other_acount
    where uid = #{uid,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.alankin.ucenter.dao.model.UserOtherAcountExample">
        delete from user_other_acount
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.alankin.ucenter.dao.model.UserOtherAcount">
    insert into user_other_acount (uid, user_uid, acount, 
      acount_password, acount_type_key, create_time, 
      update_time)
    values (#{uid,jdbcType=BIGINT}, #{userUid,jdbcType=BIGINT}, #{acount,jdbcType=VARCHAR}, 
      #{acountPassword,jdbcType=VARCHAR}, #{acountTypeKey,jdbcType=INTEGER}, #{createTime,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.alankin.ucenter.dao.model.UserOtherAcount">
        insert into user_other_acount
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="userUid != null">
                user_uid,
            </if>
            <if test="acount != null">
                acount,
            </if>
            <if test="acountPassword != null">
                acount_password,
            </if>
            <if test="acountTypeKey != null">
                acount_type_key,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid,jdbcType=BIGINT},
            </if>
            <if test="userUid != null">
                #{userUid,jdbcType=BIGINT},
            </if>
            <if test="acount != null">
                #{acount,jdbcType=VARCHAR},
            </if>
            <if test="acountPassword != null">
                #{acountPassword,jdbcType=VARCHAR},
            </if>
            <if test="acountTypeKey != null">
                #{acountTypeKey,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.alankin.ucenter.dao.model.UserOtherAcountExample"
            resultType="java.lang.Integer">
        select count(*) from user_other_acount
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_other_acount
        <set>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=BIGINT},
            </if>
            <if test="record.userUid != null">
                user_uid = #{record.userUid,jdbcType=BIGINT},
            </if>
            <if test="record.acount != null">
                acount = #{record.acount,jdbcType=VARCHAR},
            </if>
            <if test="record.acountPassword != null">
                acount_password = #{record.acountPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.acountTypeKey != null">
                acount_type_key = #{record.acountTypeKey,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_other_acount
        set uid = #{record.uid,jdbcType=BIGINT},
        user_uid = #{record.userUid,jdbcType=BIGINT},
        acount = #{record.acount,jdbcType=VARCHAR},
        acount_password = #{record.acountPassword,jdbcType=VARCHAR},
        acount_type_key = #{record.acountTypeKey,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.alankin.ucenter.dao.model.UserOtherAcount">
        update user_other_acount
        <set>
            <if test="userUid != null">
                user_uid = #{userUid,jdbcType=BIGINT},
            </if>
            <if test="acount != null">
                acount = #{acount,jdbcType=VARCHAR},
            </if>
            <if test="acountPassword != null">
                acount_password = #{acountPassword,jdbcType=VARCHAR},
            </if>
            <if test="acountTypeKey != null">
                acount_type_key = #{acountTypeKey,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=INTEGER},
            </if>
        </set>
        where uid = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.alankin.ucenter.dao.model.UserOtherAcount">
    update user_other_acount
    set user_uid = #{userUid,jdbcType=BIGINT},
      acount = #{acount,jdbcType=VARCHAR},
      acount_password = #{acountPassword,jdbcType=VARCHAR},
      acount_type_key = #{acountTypeKey,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=BIGINT}
  </update>

    <select id="selectUserOtherAcountsByUserUid" resultType="java.util.Map">
        select
        uoa.user_uid,
        uoa.acount,
        uoa.acount_password,
        dict.dic_value
        from user_other_acount uoa
        left join data_dic dict on dict.data_type_code = '11' and uoa.acount_type_key = dict.dic_key
        <where>
            1=1
            and uoa.acount != ''
            and !isnull(uoa.acount)
            and uoa.acount_password != ''
            and !isnull(uoa.acount_password)
            <if test="id!=null and id!=''">AND uoa.user_uid = #{id}</if>
        </where>
    </select>
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
</mapper>